{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "lib/angular-downloadsvg-directive.js",
    "../svgsaver/lib/svgsaver.js",
    "../svgsaver/node_modules/copy-styles/lib/index.js",
    "../svgsaver/node_modules/copy-styles/node_modules/computed-styles/dist/index.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "/*\n * angular-downloadsvg-directive\n * (c) 2013-2015 J. Harshbarger\n * Licensed MIT\n */\n\n/* jshint undef: true, unused: true */\n/* global angular */\n/* global require */\n/* global document */\n\nvar SvgSaver = require('svgsaver');\n\nangular.module('hc.downloader', [])\n\t.factory('svgDownload', ['$log', function($log) {\n\n\t\tvar svgSaver = new SvgSaver();\n\n\t\treturn function(el) {\n\n\t\t\tif (angular.isString(el) && el.charAt(0) != '<') {\n\t\t\t\tel = document.querySelector(el);\n\t\t\t}\n\n\t\t\tvar svg = angular.element(el);\n\n\t\t\tif (svg.prop('tagName') !== 'svg') {\n\t\t\t\tsvg = svg.find('svg');\n\t\t\t}\n\n\t\t\tif (svg.length < 1) {\n\t\t\t\t$log.warn('svgDownload Error: Element ' + el + ' not found');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tgetHtml: function() { return svgSaver.getHTML(svg[0]); },\n\t\t\t\tgetBlob: function() { return svgSaver.getBlob(svg[0]); },\n\t\t\t\tasSvg: function(filename) { return svgSaver.asSvg(svg[0],filename); },\n\t\t\t\tasPng: function(filename) { return svgSaver.asPng(svg[0],filename); }\n\t\t\t};\n\n\t\t};\n\n\t}])\n\n\t/**\n\t * @ngdoc directive\n\t * @name hc.downloader.directive:svgDownload\n\t * @restrict A\n\t * @element button\n\t *\n\t * @description\n\t * AngularJS directive to download an SVG element as an SVG file.\n\t *\n\t * @param {string} svg-download The source element to download.  If blank uses the first svg in the body.\n\t * @param {string=} filename Name of resaulting svg file.  If blank uses title or 'untitled.svg'\n\t * @param {string} [type='svg'] Type of file to download (svg or png)\n\t *\n\t * @example\n\n\t ## A simple example\n\n\t  <example module=\"hc.downloader\">\n\t\t<file name=\"example.html\">\n\t\t  <div ng-include=\"'octocat.html'\"></div>\n\t\t\t  <button svg-download title=\"mysvg\">Download as SVG</button>\n\t\t\t  <button svg-download title=\"mysvg\" type=\"png\">Download as PNG</button>\n\t\t  <small class=\"pull-right\">Source: <a href=\"https://gist.github.com/johan/1007813\">https://gist.github.com/johan/1007813</a></small>\n\t\t</file>\n\t\t<file name=\"octocat.html\">\n\t\t  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-0.2 -1 379 334\">\n\t\t   <path id=\"puddle\" d=\"m296.94 295.43c0 20.533-47.56 37.176-106.22 37.176-58.67 0-106.23-16.643-106.23-37.176s47.558-37.18 106.23-37.18c58.66 0 106.22 16.65 106.22 37.18z\"/>\n\t\t   <g id=\"shadow-legs\">\n\t\t\t<path d=\"m161.85 331.22v-26.5c0-3.422-.619-6.284-1.653-8.701 6.853 5.322 7.316 18.695 7.316 18.695v17.004c6.166.481 12.534.773 19.053.861l-.172-16.92c-.944-23.13-20.769-25.961-20.769-25.961-7.245-1.645-7.137 1.991-6.409 4.34-7.108-12.122-26.158-10.556-26.158-10.556-6.611 2.357-.475 6.607-.475 6.607 10.387 3.775 11.33 15.105 11.33 15.105v23.622c5.72.98 11.71 1.79 17.94 2.4z\"/>\n\t\t\t<path d=\"m245.4 283.48s-19.053-1.566-26.16 10.559c.728-2.35.839-5.989-6.408-4.343 0 0-19.824 2.832-20.768 25.961l-.174 16.946c6.509-.025 12.876-.254 19.054-.671v-17.219s.465-13.373 7.316-18.695c-1.034 2.417-1.653 5.278-1.653 8.701v26.775c6.214-.544 12.211-1.279 17.937-2.188v-24.113s.944-11.33 11.33-15.105c0-.01 6.13-4.26-.48-6.62z\"/>\n\t\t   </g>\n\t\t   <path id=\"cat\" d=\"m378.18 141.32l.28-1.389c-31.162-6.231-63.141-6.294-82.487-5.49 3.178-11.451 4.134-24.627 4.134-39.32 0-21.073-7.917-37.931-20.77-50.759 2.246-7.25 5.246-23.351-2.996-43.963 0 0-14.541-4.617-47.431 17.396-12.884-3.22-26.596-4.81-40.328-4.81-15.109 0-30.376 1.924-44.615 5.83-33.94-23.154-48.923-18.411-48.923-18.411-9.78 24.457-3.733 42.566-1.896 47.063-11.495 12.406-18.513 28.243-18.513 47.659 0 14.658 1.669 27.808 5.745 39.237-19.511-.71-50.323-.437-80.373 5.572l.276 1.389c30.231-6.046 61.237-6.256 80.629-5.522.898 2.366 1.899 4.661 3.021 6.879-19.177.618-51.922 3.062-83.303 11.915l.387 1.36c31.629-8.918 64.658-11.301 83.649-11.882 11.458 21.358 34.048 35.152 74.236 39.484-5.704 3.833-11.523 10.349-13.881 21.374-7.773 3.718-32.379 12.793-47.142-12.599 0 0-8.264-15.109-24.082-16.292 0 0-15.344-.235-1.059 9.562 0 0 10.267 4.838 17.351 23.019 0 0 9.241 31.01 53.835 21.061v32.032s-.943 11.33-11.33 15.105c0 0-6.137 4.249.475 6.606 0 0 28.792 2.361 28.792-21.238v-34.929s-1.142-13.852 5.663-18.667v57.371s-.47 13.688-7.551 18.881c0 0-4.723 8.494 5.663 6.137 0 0 19.824-2.832 20.769-25.961l.449-58.06h4.765l.453 58.06c.943 23.129 20.768 25.961 20.768 25.961 10.383 2.357 5.663-6.137 5.663-6.137-7.08-5.193-7.551-18.881-7.551-18.881v-56.876c6.801 5.296 5.663 18.171 5.663 18.171v34.929c0 23.6 28.793 21.238 28.793 21.238 6.606-2.357.474-6.606.474-6.606-10.386-3.775-11.33-15.105-11.33-15.105v-45.786c0-17.854-7.518-27.309-14.87-32.3 42.859-4.25 63.426-18.089 72.903-39.591 18.773.516 52.557 2.803 84.873 11.919l.384-1.36c-32.131-9.063-65.692-11.408-84.655-11.96.898-2.172 1.682-4.431 2.378-6.755 19.25-.80 51.38-.79 82.66 5.46z\"/>\n\t\t   <path id=\"face\" d=\"m258.19 94.132c9.231 8.363 14.631 18.462 14.631 29.343 0 50.804-37.872 52.181-84.585 52.181-46.721 0-84.589-7.035-84.589-52.181 0-10.809 5.324-20.845 14.441-29.174 15.208-13.881 40.946-6.531 70.147-6.531 29.07-.004 54.72-7.429 69.95 6.357z\"/>\n\t\t   <path id=\"eyes\" d=\"m160.1 126.06 c0 13.994-7.88 25.336-17.6 25.336-9.72 0-17.6-11.342-17.6-25.336 0-13.992 7.88-25.33 17.6-25.33 9.72.01 17.6 11.34 17.6 25.33z m94.43 0 c0 13.994-7.88 25.336-17.6 25.336-9.72 0-17.6-11.342-17.6-25.336 0-13.992 7.88-25.33 17.6-25.33 9.72.01 17.6 11.34 17.6 25.33z\"/>\n\t\t   <g id=\"face-features\">\n\t\t\t <path id=\"pupils\" d=\"m154.46 126.38 c0 9.328-5.26 16.887-11.734 16.887s-11.733-7.559-11.733-16.887c0-9.331 5.255-16.894 11.733-16.894 6.47 0 11.73 7.56 11.73 16.89z m94.42 0 c0 9.328-5.26 16.887-11.734 16.887s-11.733-7.559-11.733-16.887c0-9.331 5.255-16.894 11.733-16.894 6.47 0 11.73 7.56 11.73 16.89z\"/>\n\t\t\t <circle id=\"nose\" cx=\"188.5\" cy=\"148.56\" r=\"4.401\"/>\n\t\t\t <path id=\"mouth\" d=\"m178.23 159.69c-.26-.738.128-1.545.861-1.805.737-.26 1.546.128 1.805.861 1.134 3.198 4.167 5.346 7.551 5.346s6.417-2.147 7.551-5.346c.26-.738 1.067-1.121 1.805-.861s1.121 1.067.862 1.805c-1.529 4.324-5.639 7.229-10.218 7.229s-8.68-2.89-10.21-7.22z\"/>\n\t\t   </g>\n\t\t   <path id=\"octo\" d=\"m80.641 179.82 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m8.5 4.72 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m5.193 6.14 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m4.72 7.08 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m5.188 6.61 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m7.09 5.66 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m9.91 3.78 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m9.87 0 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z m10.01 -1.64 c0 1.174-1.376 2.122-3.07 2.122-1.693 0-3.07-.948-3.07-2.122 0-1.175 1.377-2.127 3.07-2.127 1.694 0 3.07.95 3.07 2.13z\"/>\n\t\t   <path id=\"drop\" d=\"m69.369 186.12l-3.066 10.683s-.8 3.861 2.84 4.546c3.8-.074 3.486-3.627 3.223-4.781z\"/>\n\t\t  </svg>\n\t\t</file>\n\t\t<file name=\"octocat.css\">\n\t\t  #puddle { fill: #9CDAF1; }\n\t\t  #shadow-legs { fill: #7DBBE6; }\n\t\t  #face { fill: #F4CBB2; }\n\t\t  #eyes { fill: #FFF; }\n\t\t  #face-features { fill: #AD5C51; }\n\t\t  #octo { fill: #C3E4D8; }\n\t\t  #drop { fill: #9CDAF1; }}\n\t\t</file>\n\t  </example>\n\n\t */\n\t.directive('svgDownload', ['svgDownload', function (svgDownload) {\n\t\treturn {\n\t\t  restrict: 'A',\n\t\t  link: function (scope, element, attrs) {\n\n\t\t\t\telement.on('click', download);\n\n\t\t\t\tfunction download(){\n\t\t\t\t\tvar ext = attrs.type || 'svg';\n\t\t\t\t  var filename = encodeURI(attrs.filename || attrs.title || 'untitled') + '.' + ext;\n\t\t\t\t  var svg = svgDownload(attrs.svgDownload || 'body');\n\t\t\t\t\tif (svg) {\n\t\t\t\t\t\tif(ext === 'svg') { svg.asSvg(filename); }\n\t\t\t\t\t\tif(ext === 'png') { svg.asPng(filename); }\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t  }\n\t\t};\n\t}]);\n",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _copyStyles = require('copy-styles');\n\nvar _copyStyles2 = _interopRequireDefault(_copyStyles);\n\n/* Some simple utilities */\n\nvar isFunction = function isFunction(a) {\n  return typeof a === 'function';\n};\nvar isDefined = function isDefined(a) {\n  return typeof a !== 'undefined';\n};\nvar isUndefined = function isUndefined(a) {\n  return typeof a === 'undefined';\n};\n\n//detection\nvar DownloadAttributeSupport = typeof document !== 'undefined' && 'download' in document.createElement('a');\n\nfunction saveUri(uri, name) {\n\n  if (DownloadAttributeSupport) {\n    var dl = document.createElement('a');\n    dl.setAttribute('href', uri);\n    dl.setAttribute('download', name);\n    dl.click();\n    return true;\n  } else if (typeof window !== 'undefined') {\n    window.open(uri, '_blank', '');\n    return true;\n  }\n\n  return false;\n}\n\nfunction savePng(uri, name) {\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n\n  var image = new Image();\n  image.onload = function () {\n    canvas.width = image.width;\n    canvas.height = image.height;\n    context.drawImage(image, 0, 0);\n\n    if (isDefined(window.saveAs) && isDefined(canvas.toBlob)) {\n      canvas.toBlob(function (blob) {\n        saveAs(blob, name);\n      });\n    } else {\n      saveUri(canvas.toDataURL('image/png'), name);\n    }\n  };\n  image.src = uri;\n  return true;\n}\n\n// Removes attributes that are not valid for SVGs\nfunction cleanAttrs(el, attrs, styles) {\n  // attrs === false - remove all, attrs === true - allow all\n  if (attrs === true) {\n    return;\n  }\n\n  Array.prototype.slice.call(el.attributes).forEach(function (attr) {\n    // remove if it is not style nor on attrs  whitelist\n    // keeping attributes that are also styles because attributes override\n    if (attr.specified) {\n      if (attrs === false || isUndefined(styles[attr.name]) && attrs.indexOf(attr.name) < 0) {\n        el.removeAttribute(attr.name);\n      }\n    }\n  });\n}\n\n// Clones an SVGElement, copyies approprate atttributes and styles.\nfunction cloneSvg(src, attrs, styles) {\n  var clonedSvg = src.cloneNode(true);\n  var srcChildren = src.querySelectorAll('*');\n\n  Array.prototype.slice.call(clonedSvg.querySelectorAll('*')).forEach(function (target, index) {\n    (0, _copyStyles2['default'])(srcChildren[index], target, styles);\n    cleanAttrs(target, attrs, styles);\n  });\n\n  return clonedSvg;\n}\n\nvar svgStyles = { // Whitelist of CSS styles and default values\n  'alignment-baseline': 'auto',\n  'baseline-shift': 'baseline',\n  'clip': 'auto',\n  'clip-path': 'none',\n  'clip-rule': 'nonzero',\n  'color': 'rgb(51, 51, 51)',\n  'color-interpolation': 'srgb',\n  'color-interpolation-filters': 'linearrgb',\n  'color-profile': 'auto',\n  'color-rendering': 'auto',\n  'cursor': 'auto',\n  'direction': 'ltr',\n  'display': 'inline',\n  'dominant-baseline': 'auto',\n  'enable-background': '',\n  'fill': 'rgb(0, 0, 0)',\n  'fill-opacity': '1',\n  'fill-rule': 'nonzero',\n  'filter': 'none',\n  'flood-color': 'rgb(0, 0, 0)',\n  'flood-opacity': '1',\n  'font': '',\n  'font-family': 'normal',\n  'font-size': 'medium',\n  'font-size-adjust': 'auto',\n  'font-stretch': 'normal',\n  'font-style': 'normal',\n  'font-variant': 'normal',\n  'font-weight': '400',\n  'glyph-orientation-horizontal': '0deg',\n  'glyph-orientation-vertical': 'auto',\n  'image-rendering': 'auto',\n  'kerning': 'auto',\n  'letter-spacing': '0',\n  'lighting-color': 'rgb(255, 255, 255)',\n  'marker': '',\n  'marker-end': 'none',\n  'marker-mid': 'none',\n  'marker-start': 'none',\n  'mask': 'none',\n  'opacity': '1',\n  'overflow': 'visible',\n  'paint-order': 'normal',\n  'pointer-events': 'auto',\n  'shape-rendering': 'auto',\n  'stop-color': 'rgb(0, 0, 0)',\n  'stop-opacity': '1',\n  'stroke': 'none',\n  'stroke-dasharray': 'none',\n  'stroke-dashoffset': '0',\n  'stroke-linecap': 'butt',\n  'stroke-linejoin': 'miter',\n  'stroke-miterlimit': '4',\n  'stroke-opacity': '1',\n  'stroke-width': '1',\n  'text-anchor': 'start',\n  'text-decoration': 'none',\n  'text-rendering': 'auto',\n  'unicode-bidi': 'normal',\n  'visibility': 'visible',\n  'word-spacing': '0px',\n  'writing-mode': 'lr-tb'\n};\n\nvar svgAttrs = [// white list of attributes\n'id', 'xml:base', 'xml:lang', 'xml:space', // Core\n'height', 'result', 'width', 'x', 'y', // Primitive\n'xlink:href', // Xlink attribute\n'style', 'class', 'd', 'pathLength', // Path\n'x', 'y', 'dx', 'dy', 'glyphRef', 'format', 'x1', 'y1', 'x2', 'y2', 'rotate', 'textLength', 'cx', 'cy', 'r', 'rx', 'ry', 'fx', 'fy', 'width', 'height', 'refX', 'refY', 'orient', 'markerUnits', 'markerWidth', 'markerHeight', 'maskUnits', 'transform', 'viewBox', 'version', // Container\n'preserveAspectRatio', 'xmlns', 'points', // Polygons\n'offset'];\n\nvar SvgSaver = (function () {\n\n  /**\n  * SvgSaver constructor.\n  * @constructs SvgSaver\n  * @api public\n  *\n  * @example\n  * var svgsaver = new SvgSaver();                      // creates a new instance\n  * var svg = document.querySelector('#mysvg');         // find the SVG element\n  * svgsaver.asSvg(svg);                                // save as SVG\n  */\n\n  function SvgSaver() {\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var attrs = _ref.attrs;\n    var styles = _ref.styles;\n\n    _classCallCheck(this, SvgSaver);\n\n    this.attrs = attrs === undefined ? svgAttrs : attrs;\n    this.styles = styles === undefined ? svgStyles : styles;\n  }\n\n  /**\n  * Return the SVG HTML text after cleaning\n  *\n  * @param {SVGElement} el The element to copy.\n  * @returns {String} SVG text after cleaning\n  * @api public\n  */\n\n  _createClass(SvgSaver, [{\n    key: 'getHTML',\n    value: function getHTML(el) {\n      var svg = cloneSvg(el, this.attrs, this.styles);\n\n      svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n      svg.setAttribute('version', 1.1);\n\n      // height and width needed to download in FireFox\n      svg.setAttribute('width', svg.getAttribute('width') || '500');\n      svg.setAttribute('height', svg.getAttribute('height') || '900');\n\n      return svg.outerHTML || new window.XMLSerializer().serializeToString(svg);\n    }\n\n    /**\n    * Return the SVG, after cleaning, as a text/xml Blob\n    *\n    * @param {SVGElement} el The element to copy.\n    * @returns {Blog} SVG as a text/xml Blob\n    * @api public\n    */\n  }, {\n    key: 'getBlob',\n    value: function getBlob(el) {\n      var html = this.getHTML(el);\n      return new Blob([html], { type: 'text/xml' });\n    }\n\n    /**\n    * Return the SVG, after cleaning, as a image/svg+xml;base64 URI encoded string\n    *\n    * @param {SVGElement} el The element to copy.\n    * @returns {String} SVG as image/svg+xml;base64 URI encoded string\n    * @api public\n    */\n  }, {\n    key: 'getUri',\n    value: function getUri(el) {\n      var html = this.getHTML(el);\n      if (isDefined(window.btoa)) {\n        return 'data:image/svg+xml;base64,' + window.btoa(html);\n      }\n      return 'data:image/svg+xml,' + encodeURIComponent(html);\n    }\n\n    /**\n    * Saves the SVG as a SVG file using method compatible with the browser\n    *\n    * @param {SVGElement} el The element to copy.\n    * @param {string} [filename] The filename to save, defaults to the SVG title or 'untitled.svg'\n    * @returns {SvgSaver} The SvgSaver instance\n    * @api public\n    */\n  }, {\n    key: 'asSvg',\n    value: function asSvg(el, filename) {\n      if (!filename || filename === '') {\n        filename = el.getAttribute('title');\n        filename = (filename || 'untitled') + '.svg';\n      }\n      if (isDefined(window.saveAs) && isFunction(Blob)) {\n        return saveAs(this.getBlob(el), filename);\n      } else {\n        return saveUri(this.getUri(el), filename);\n      }\n    }\n\n    /**\n    * Saves the SVG as a PNG file using method compatible with the browser\n    *\n    * @param {SVGElement} el The element to copy.\n    * @param {string} [filename] The filename to save, defaults to the SVG title or 'untitled.png'\n    * @returns {SvgSaver} The SvgSaver instance\n    * @api public\n    */\n  }, {\n    key: 'asPng',\n    value: function asPng(el, filename) {\n      if (!filename || filename === '') {\n        filename = el.getAttribute('title');\n        filename = (filename || 'untitled') + '.png';\n      }\n      return savePng(this.getUri(el), filename);\n    }\n  }]);\n\n  return SvgSaver;\n})();\n\nexports['default'] = SvgSaver;\nmodule.exports = exports['default'];\n",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _computedStyles = require('computed-styles');\n\nvar _computedStyles2 = _interopRequireDefault(_computedStyles);\n\n// Copies computed styles from source to target\n/**\n* Copies computed styles from source to target\n* @param  {element} source A DOM element to copy styles from\n* @param  {element} target A DOM element to copy styles to\n* @param {(object|boolean)} [defaultStyles=true] collection of CSS property-value pairs, false: copy none, true: copy all\n* @api public\n*/\nfunction copyStyles(source, target) {\n  var defaultStyles = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\n  if (defaultStyles === false) {\n    return;\n  }\n\n  var srcStyles = (0, _computedStyles2['default'])(source);\n\n  if (defaultStyles === true) {\n    // copy all styles\n    for (var key in srcStyles) {\n      target.style[key] = srcStyles[key];\n    }\n    return;\n  }\n\n  var parStyles = (0, _computedStyles2['default'])(target.parentNode);\n\n  for (var key in defaultStyles) {\n    var src = srcStyles[key];\n    if (src && src !== defaultStyles[key] && src !== parStyles[key]) {\n      target.style[key] = src;\n    }\n  }\n}\n\nexports['default'] = copyStyles;\nmodule.exports = exports['default'];",
    "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar isDefined = function isDefined(a) {\n  return typeof a !== 'undefined';\n};\n\n// from https://github.com/npm-dom/is-dom/blob/master/index.js\nfunction isNode(val) {\n  if (!val || typeof val !== 'object') return false;\n  if (window && 'object' == typeof window.Node) return val instanceof window.Node;\n  return 'number' == typeof val.nodeType && 'string' == typeof val.nodeName;\n}\n\n// Convert computed styles to something we can iterate over\n// adapted from http://stackoverflow.com/questions/754607/can-jquery-get-all-css-styles-associated-with-an-element/6416527#6416527\nfunction convertComputedStyles(computed) {\n  var styles = {};\n  for (var i = 0, l = computed.length; i < l; i++) {\n    var prop = computed[i];\n    styles[prop] = computed.getPropertyValue(prop);\n  }\n  return styles;\n}\n\n/**\n* Returns a collection of CSS property-value pairs\n* @param  {element} node A DOM element\n* @return {object} collection of CSS property-value pairs\n* @api public\n*/\nfunction computedStyles(node) {\n  if (!isNode(node)) {\n    throw new Error('parameter 1 is not of type \\'Element\\'');\n  }\n  // adapted from https://github.com/angular/angular.js/issues/2866#issuecomment-31012434\n  if (isDefined(node.currentStyle)) {\n    //for old IE\n    return node.currentStyle;\n  } else if (isDefined(window.getComputedStyle)) {\n    //for modern browsers\n    return convertComputedStyles(node.ownerDocument.defaultView.getComputedStyle(node, null));\n  }\n  return node.style;\n}\n\nexports['default'] = computedStyles;\nmodule.exports = exports['default'];"
  ]
}